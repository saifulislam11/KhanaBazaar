-- ** ENTITIES **--


-- ADMIN WITH HIS PHONE

CREATE TABLE ADMIN (
	ID CHAR ( 10 ),
	LAST_NAME VARCHAR2 ( 50 ) NOT NULL,
	FIRST_NAME VARCHAR2 ( 50 ) NOT NULL,
	EMAIL VARCHAR2 ( 50 ) UNIQUE NOT NULL,
	PASSWORD_HASH VARCHAR2 ( 50 ),
	ADDRESS VARCHAR2 ( 200 ),
CONSTRAINT ADMIN_PK PRIMARY KEY ( ID ) 
);

  
--DROP TABLE ADMIN_PHONE;

CREATE TABLE ADMIN_PHONE (
	ADMIN_ID CHAR ( 10 ),
	PHONE_NO VARCHAR2 ( 15 ),
	CONSTRAINT ADMIN_PHONE_PK PRIMARY KEY ( ADMIN_ID, PHONE_NO ),
CONSTRAINT ADMIN_PHONE_FK FOREIGN KEY ( ADMIN_ID ) REFERENCES ADMIN ( ID ) ON DELETE CASCADE 
);



-- RESTUARANT 

CREATE TABLE RESTAURANT(
    ID CHAR(10) NOT NULL,
		NAME VARCHAR2(40) NOT NULL,
		LOCATION VARCHAR2(200) NOT NULL,
		LOGO_PATH VARCHAR2(200) NOT NULL,
		RATING INTEGER CHECK (RATING BETWEEN 0 AND 5),
		OPEN_TIME VARCHAR2(40) NOT NULL,
		CLOSE_TIME VARCHAR2(40) NOT NULL,
		EMAIL VARCHAR2(50) UNIQUE NOT NULL,
		PASSWORD_HASH VARCHAR2(100) NOT NULL,
		PRIMARY KEY (ID)
);


-- FOOD ITEM WITH ITS IMAGES


CREATE TABLE FOOD_ITEM (
	ID CHAR ( 10 ) UNIQUE,
	RESTAURANT_ID CHAR(10) NOT NULL,
	NAME VARCHAR2 ( 50 ) NOT NULL,
	PRICE INTEGER CHECK(PRICE > 0) NOT NULL,
	OFFER INTEGER,
	AVAILIBILITY CHAR ( 1 ),
	DESCRIPTION VARCHAR2 ( 1000 ),
	"TYPE" VARCHAR2 ( 50 ),
	CONSTRAINT FOOD_ITEM_PK PRIMARY KEY(ID,RESTAURANT_ID),
	FOREIGN KEY(RESTAURANT_ID) REFERENCES RESTAURANT(ID) ON DELETE CASCADE
		
);

CREATE TABLE FOOD_ITEM_PATH (
	ID CHAR ( 10 ),
	IMAGE_PATH VARCHAR2 ( 200 ),
	CONSTRAINT FOOD_ITEM_PATH_PK PRIMARY KEY ( ID, IMAGE_PATH ),
CONSTRAINT FOOD_ITEM_PATH_FK FOREIGN KEY ( ID ) REFERENCES FOOD_ITEM ( ID ) ON DELETE CASCADE 
);


-- CUSTOMER WITH HIS PHONE

CREATE TABLE CUSTOMER (
	ID CHAR(10) NOT NULL,
	LAST_NAME VARCHAR2(50) NOT NULL,
	FIRST_NAME VARCHAR2(50) NOT NULL,
	EMAIL VARCHAR2(50) UNIQUE NOT NULL,
	PASSWORD_HASH VARCHAR2(100),
	ADDRESS VARCHAR2(200),
	CONSTRAINT CUSTOMER_PK PRIMARY KEY ( ID )
);

CREATE TABLE CUSTOMER_PHONE (
	CUSTOMER_ID CHAR ( 10 ),
	PHONE_NO VARCHAR2 ( 15 ),
	CONSTRAINT CUSTOMER_PHONE_PK PRIMARY KEY ( CUSTOMER_ID, PHONE_NO ),
  CONSTRAINT CUSTOMER_PHONE_FK FOREIGN KEY ( CUSTOMER_ID ) REFERENCES CUSTOMER ( ID ) ON DELETE CASCADE
);


-- ORDER 

CREATE TABLE "ORDER" (
         ID CHAR(10) NOT NULL,
				 ORDER_TIME DATE NOT NULL,
				 DELIVERY_TIME DATE,
				 DELIVERY_LOCATION VARCHAR2(200) NOT NULL,
				 PRIMARY KEY(ID)		 
);


-- PROMO 

CREATE TABLE PROMO(
        ID CHAR(10) NOT NULL,
				NAME VARCHAR2(30) NOT NULL,
				"PERCENT" INTEGER,
				FIXED_AMOUNT FLOAT NOT NULL,
				PROMO_LIMIT INTEGER NOT NULL,
				MIN_ORDER_VALUE FLOAT NOT NULL,
				MAX_DISCOUNT_AMOUNT FLOAT NOT NULL,
				CONSTRAINT PROMO_PK PRIMARY KEY(ID)
);


-- PAYMENT

CREATE TABLE PAYMENT(
        ID CHAR(10) NOT NULL,
				PAYING_AMOUNT FLOAT NOT NULL,
				PAYMENT_TYPE VARCHAR2(40) NOT NULL,
				DATE_TIME DATE,
				PRIMARY KEY(ID)
);


-- REVIEW  WITH ITS IMAGE

CREATE TABLE REVIEW(
         ID CHAR(10) NOT NULL,
				 FOOD_RATING INTEGER CHECK (FOOD_RATING BETWEEN 0 AND 5) NOT NULL,
				 "COMMENT" VARCHAR2(100) ,
				 DATE_TIME DATE ,
				 CONSTRAINT REVIEW_PK PRIMARY KEY(ID)
);


CREATE TABLE REVIEW_IMAGE(
        REVIEW_ID CHAR(10) NOT NULL,
				IMAGE_PATH VARCHAR2(200) NOT NULL,

				CONSTRAINT IMAGE_PK PRIMARY KEY(REVIEW_ID,IMAGE_PATH),
				FOREIGN KEY(REVIEW_ID) REFERENCES REVIEW(ID) ON DELETE CASCADE

);


-- FOODMAN 


CREATE TABLE FOODMAN(
       ID CHAR(10) NOT NULL,
			 NAME VARCHAR2(40) NOT NULL,
			 EMAIL VARCHAR2(50) UNIQUE NOT NULL,
			 PASSWORD_HASH VARCHAR2(100) NOT NULL,
			 RATING INTEGER CHECK (RATING BETWEEN 0 AND 5),
			 IMAGE_PATH VARCHAR2(200),
			 CONSTRAINT FOODMAN_PK PRIMARY KEY(ID) 
);

--FOODMAN PHONE
CREATE TABLE FOODMAN_PHONE(
          ID CHAR(10) NOT NULL,
					PHONE_NO VARCHAR2(15) NOT NULL,
					CONSTRAINT PHONE_PK PRIMARY KEY(ID,PHONE_NO),
					FOREIGN KEY(ID) REFERENCES FOODMAN(ID) ON DELETE CASCADE
);


-- VEHICLE


CREATE TABLE VEHICLE(
          ID CHAR(10) NOT NULL,
					REG_NO CHAR(15) NOT NULL,
					"TYPE" VARCHAR2(50),
					CONSTRAINT VEHICLE_PK PRIMARY KEY(ID)
);


-- CONTRACT 
CREATE TABLE CONTRACT(
             ID CHAR(10) NOT NULL,
						 DURATION INTEGER,
						 SALARY FLOAT NOT NULL,
						 INIT_RATING INTEGER CHECK (INIT_RATING BETWEEN 0 AND 5),
						 DATE_OF_CONTRACT DATE,
						 CONSTRAINT CONTRACT_PK PRIMARY KEY(ID)
);



-- ** NOW RELATIONS **

--MANAGES 
CREATE TABLE MANAGES(
        RESTAURANT_ID CHAR(10) NOT NULL,
				ADMIN_ID CHAR(10) NOT NULL,
				CONSTRAINT MANAGES_PK PRIMARY KEY(RESTAURANT_ID),
				FOREIGN KEY(RESTAURANT_ID) REFERENCES RESTAURANT(ID) ON DELETE CASCADE,
				FOREIGN KEY(ADMIN_ID) REFERENCES ADMIN(ID) ON DELETE SET NULL
);


-- SELECTED 
CREATE TABLE SELECTED(
	ORDER_ID CHAR ( 10 ),
	FOOD_ID CHAR ( 10 ),
	CONSTRAINT SELECTED_PK PRIMARY KEY ( ORDER_ID, FOOD_ID ),
	FOREIGN KEY ( ORDER_ID ) REFERENCES "ORDER" ( ID ) ON DELETE CASCADE,
	FOREIGN KEY ( FOOD_ID ) REFERENCES FOOD_ITEM ( ID ) --  ON DELETE ??

);


-- CHOOSES

CREATE TABLE CHOOSES (
         ORDER_ID CHAR(10),
				 CUSTOMER_ID CHAR(10),
				 CONSTRAINT CHOOSES_PK PRIMARY KEY(ORDER_ID),
				 FOREIGN KEY(ORDER_ID) REFERENCES "ORDER"(ID) ON DELETE CASCADE,
				 FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(ID) ON DELETE CASCADE
);


-- USES 


CREATE TABLE USES (
	ORDER_ID CHAR ( 5 ),
	PROMO_ID CHAR ( 5 ),
	CONSTRAINT USES_PK PRIMARY KEY ( ORDER_ID ),
	FOREIGN KEY ( ORDER_ID ) REFERENCES "ORDER" ( ID ) ON DELETE CASCADE,
	FOREIGN KEY ( PROMO_ID ) REFERENCES PROMO ( ID ) ON DELETE 
SET NULL 
	);



-- PAYS 


CREATE TABLE PAYS (
	ORDER_ID CHAR ( 10 ),
	PAY_ID CHAR ( 10 ),
	CONSTRAINT PAYS_PK PRIMARY KEY ( PAY_ID ),
	FOREIGN KEY ( ORDER_ID ) REFERENCES "ORDER" ( ID ) ON DELETE CASCADE,
  FOREIGN KEY ( PAY_ID ) REFERENCES PAYMENT ( ID ) ON DELETE CASCADE 
);


-- OFFERS


CREATE TABLE OFFERS(
          ADMIN_ID CHAR(10) NOT NULL,
					CUSTOMER_ID CHAR(10),
					PROMO_ID CHAR(10),
					REMAINING_PROMO INTEGER,
					CONSTRAINT OFFERS_PK PRIMARY KEY(CUSTOMER_ID,PROMO_ID),
					FOREIGN KEY(ADMIN_ID) REFERENCES ADMIN(ID) ON DELETE CASCADE,
					FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(ID) ON DELETE CASCADE,
					FOREIGN KEY(PROMO_ID) REFERENCES PROMO(ID) ON DELETE CASCADE	
);



-- REVIEWS 
CREATE TABLE REVIEWS(
           CUSTOMER_ID CHAR(10) NOT NULL,
					 PAY_ID CHAR(10) NOT NULL,
					 RESTAURANT_ID CHAR(10) NOT NULL,
					 REVIEW_ID CHAR(10) NOT NULL,
					 CONSTRAINT REVIEWS_PK PRIMARY KEY(CUSTOMER_ID,PAY_ID,RESTAURANT_ID),
					 FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(ID) ON DELETE CASCADE,
					 FOREIGN KEY(PAY_ID) REFERENCES PAYMENT(ID) ON DELETE CASCADE,
					 FOREIGN KEY(RESTAURANT_ID) REFERENCES RESTAURANT(ID) ON DELETE CASCADE,
					 FOREIGN KEY(REVIEW_ID) REFERENCES REVIEW(ID) ON DELETE CASCADE
);

-- APPOINTS 


CREATE TABLE APPOINTS(
         FOODMAN_ID CHAR(10) NOT NULL,
				 CONTRACT_ID CHAR(10) NOT NULL,
				 ADMIN_ID CHAR(10) NOT NULL,
				 CONSTRAINT APPOINTS_PK PRIMARY KEY(FOODMAN_ID,CONTRACT_ID),
				 FOREIGN KEY(FOODMAN_ID) REFERENCES FOODMAN(ID) ON DELETE CASCADE,
				 FOREIGN KEY(CONTRACT_ID) REFERENCES CONTRACT(ID) ON DELETE CASCADE,
				 FOREIGN KEY(ADMIN_ID) REFERENCES ADMIN(ID) ON DELETE CASCADE
);



-- DELIVERS BY 

CREATE TABLE DELIVERS_BY(
				 FOODMAN_ID CHAR(10) NOT NULL,
				 VEHICLE_ID CHAR(10),
				 CONSTRAINT DELIVERS_BY_PK PRIMARY KEY(FOODMAN_ID),
				 FOREIGN KEY(FOODMAN_ID) REFERENCES FOODMAN(ID) ON DELETE CASCADE,
				 FOREIGN KEY(VEHICLE_ID) REFERENCES VEHICLE(ID) ON DELETE CASCADE
);


-- DELEVERS 


CREATE TABLE DELIVERS(
         ORDER_ID CHAR(10) NOT NULL,
         FOODMAN_ID CHAR(10) NOT NULL,
				 CONSTRAINT DELIVERS_PK PRIMARY KEY(ORDER_ID),
				 FOREIGN KEY(ORDER_ID) REFERENCES "ORDER"(ID) ON DELETE CASCADE,
				 FOREIGN KEY(FOODMAN_ID) REFERENCES FOODMAN(ID) ON DELETE CASCADE
				 
);